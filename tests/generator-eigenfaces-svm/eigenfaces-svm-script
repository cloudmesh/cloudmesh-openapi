#!/bin/bash
# Run from localhost to install Openapi service on cloud VM. This is for a ubuntu 20.04 VM. Tested on Google Cloud. 20.04 comes with python 3.8.5 only, no python2.
#
#------------------------------
# Create VM with cms
#------------------------------
export VM=benchmark-5
cms vm boot --name=$VM
#------------------------------
# Setup python and pip
#------------------------------
cms vm ssh $VM --command=\"sudo apt update\" # this does wait for machine to boot significant delay
cms vm ssh $VM --command=\"sudo apt -y install python3-pip\" #significant delay ~20s
cms vm ssh $VM --command=\"sudo ln -s /usr/bin/python3 /usr/bin/python\"
cms vm ssh $VM --command=\"sudo ln -s /usr/bin/pip3 /usr/bin/pip\"
cms vm ssh $VM --command=\"pip install -U pip\"
cms vm ssh $VM --command=\"sudo apt -y install python3-venv\"
#------------------------------
# Deployment of openapi service
#------------------------------
cms vm ssh $VM --command=\"python -m venv ~/ENV3\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; pip install cloudmesh-installer"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; pip install pillow"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; pip install -U scikit-learn"\"
cms vm ssh $VM --command=\"mkdir cm\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cd cm \; cloudmesh-installer get openapi"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.data.mongo.MONGO_AUTOINSTALL=True"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms admin mongo install --force"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.data.mongo.MONGO_USERNAME=benchmark"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.data.mongo.MONGO_PASSWORD=benchmark"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.profile.user=benchmark"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.profile.firstname=benchmark"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms config set cloudmesh.profile.lastname=benchmark"\"
cms vm ssh $VM --command=\"ssh-keygen -t rsa -f \"\$HOME/.ssh/id_rsa\" -P \"benchmark\"\"
#cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms init"\" # !!!!this does not return!!!!
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; \(cms init \&\>\dev\null\) \&"\" #maybe this one works
#
#TODO remove <git checkout benchmark> when merged to main#
#
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cd cm/cloudmesh-openapi \; git checkout benchmark \; cms openapi generate eigenfaces_svm --filename=./tests/generator-eigenfaces-svm/eigenfaces-svm.py"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cd cm/cloudmesh-openapi \; git checkout benchmark \; \(cms openapi server start ./tests/generator-eigenfaces-svm/eigenfaces-svm.yaml \&\>\dev\null\) \&"\"
cms vm ssh $VM --command=\"curl -X GET "http://localhost:8080/cloudmesh/eigenfaces_svm" -H "accept: text/plain"\"
cms vm ssh $VM --command=\""source ~/ENV3/bin/activate \; cms openapi server stop eigenfaces_svm"\"
#---------------------------------
# shutdown vm
#---------------------------------
cms vm terminate $VM